+ list schemes, targets

    > xcodebuild -list -project multi.xcodeproj

+ set environment

    * https://stackoverflow.com/questions/31179706/how-can-i-launch-the-ios-simulator-from-terminal

  get device list

    > xcrun simctl list
    > xcrun simctl list devices available

  get bundleid (run after set $BUNDLEPATH)

    > mdls -name kMDItemCFBundleIdentifier -r $BUNDLEPATH

  phone

    > SCHEME=multi
    > DEVICEID=A736F7FD-1EC9-4EB3-9F88-33A12B76E96F
    > DESTINATION='platform=iOS Simulator,name=iPhone 11,OS=15.0'
    > BUNDLEPATH=/Users/reinfurt/Library/Developer/Xcode/DerivedData/multi-gewlnlwrghrquaaugzyvvcoompcu/Build/Products/Debug-iphonesimulator/jules.app
    > BUNDLEID=com.o-r-g.jules

  watch

    ** not working as of 26 JAN 2022 -- problem is knowing how to list DESTINATION **

    some links suggest always s

        accdg to man xcodebuild:

        A watchOS Simulator app is always built and deployed nested inside of an iOS Simulator app. To use a watchOS Simulator device as your
        destination, specify a scheme which is configured to run a WatchKit app, and specify the iOS Simulator platform destination that is paired
        with the watchOS Simulator device you want to use.

    > SCHEME=watch

    not working:

    > DEVICEID=4F34C33A-590B-4510-AB53-E42A2020F020
    > DESTINATION='platform=watchOS Simulator,name=Apple Watch Series 5 - 40mm,OS=8.3'

    also not working:

    > DEVICEID=790155AE-DBF3-46BE-8300-16A22B0B87C1
    > DESTINATION='platform=iOS Simulator,name=iPhone 12,OS=15.2'

    these are ok:

    > BUNDLEPATH=/Users/reinfurt/Library/Developer/Xcode/DerivedData/jules-gwsnmzsxnrhqilgeriwvrtqmxhtd/Build/Products/Debug-watchsimulator/Jules.app
    > BUNDLEID=com.o-r-g.jules.watchkitapp

+ start simulator 

    > /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app/Contents/MacOS/Simulator -CurrentDeviceUDID $DEVICEID; 

+ build

    > xcodebuild -scheme $SCHEME -destination $DESTINATION build

+ build, stop, install, run

    > xcodebuild -scheme $SCHEME build
    > xcrun simctl terminate $DEVICEID $BUNDLEID
    > xcrun simctl install $DEVICEID $BUNDLEPATH
    > xcrun simctl launch $DEVICEID $BUNDLEID
    
    one-liner

	> xcodebuild -scheme $SCHEME -destination $DESTINATION build; xcrun simctl terminate $DEVICEID $BUNDLEID;xcrun simctl install $DEVICEID $BUNDLEPATH; xcrun simctl launch $DEVICEID $BUNDLEID
